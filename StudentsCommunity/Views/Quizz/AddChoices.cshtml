@model List<StudentsCommunity.Models.Choice>

@{
    ViewBag.Title = "Insert Bulk Data";
}
<style>
    td {
        padding: 5px;
    }
    input[type=text] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
</style>
@{var ID = Url.RequestContext.RouteData.Values["id"]; }
<div style="width:700px; padding:5px; background-color:white;">
    @using (Html.BeginForm("AddChoices", "Quizz", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        if (ViewBag.Message != null)
        {
            <div style="border:solid 1px green">
                @ViewBag.Message
            </div>
        }
        @*@Html.DropDownListFor(model => model.QuestionId, ViewBag.QuestionList as SelectList, "--select--", new { @class = "form-control" })*@
        @Html.DropDownList("QuestionId", null, htmlAttributes: new { @class = "form-control chosen_a" });

        <div><a href="#" id="addNew" style="margin:8px" class="btn btn-primary">Add New Choice</a></div>
        <table id="dataTable" cellpadding="0" cellspacing="0" class="table">
            <thead class="bg-secondary">
                <tr>
                    <th class="text-primary">Choices</th>
                    <th></th>
                </tr>
            </thead>
                @if (Model != null && Model.Count > 0)
                {
                    int j = 0;
                    foreach (var i in Model)
                    {
                        <tr style="border:1px solid black">
                            <td>@Html.TextBoxFor(a => a[j].ChoiceText ,new { placeholder = "Write Choice ...", @class = "form-input" })</td>

                            <td>
                                @if (j > 0)
                                {
                                    <a href="#" class="remove">Remove</a>
                                }
                            </td>
                        </tr>
                        j++;
                    }
                }
</table>
        <input type="submit" value="Save" class="btn btn-success" />
        <a href="@Url.Action("AddAnswers", "Quizz",new{ id = ID })" class='btn btn-primary'>
            Add Answers
        </a>


    }
</div>

@* Here I will add Jquery Code for validation / dynamically add new rows / Remove rows etc *@

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script language="javascript">

        $(document).ready(function () {

            //1. Add new row
            $("#addNew").click(function (e) {
                e.preventDefault();
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" class="remove">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    if (type.toLowerCase() == "text") {
                        $(this).attr('value', '');
                    }

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);

                // Re-assign Validation
                var form = $("form")
                    .removeData("validator")
                    .removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            });

            // 2. Remove
            $('a.remove').live("click", function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

        });
    </script>
}